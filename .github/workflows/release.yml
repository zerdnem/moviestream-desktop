name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: MovieStream Desktop ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## MovieStream Desktop ${{ steps.get_version.outputs.VERSION }}
            
            ### üì¶ Downloads
            Download the binary for your platform below:
            
            - **Windows (64-bit)**: `moviestream-windows-amd64.exe`
            - **Linux (64-bit)**: `moviestream-linux-amd64`
            - **macOS (Intel)**: `moviestream-macos-amd64`
            - **macOS (Apple Silicon)**: `moviestream-macos-arm64`
            
            ### üöÄ Installation
            1. Download the appropriate binary for your system
            2. Make it executable (Linux/macOS): `chmod +x moviestream-*`
            3. Run the application
            
            ### ‚ö†Ô∏è Prerequisites
            - MPV Player must be installed on your system
            - See [README](https://github.com/zerdnem/moviestream-desktop#prerequisites) for detailed installation instructions
            
            ### üìù Changes
            See the commits since the last release for details.
          draft: false
          prerelease: false

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build Windows executable
        run: |
          go build -ldflags="-H windowsgui -s -w" -o moviestream-windows-amd64.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: moviestream-windows-amd64
          path: moviestream-windows-amd64.exe

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./moviestream-windows-amd64.exe
          asset_name: moviestream-windows-amd64.exe
          asset_content_type: application/octet-stream

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev
          go mod download
          go mod tidy

      - name: Build Linux executable
        run: |
          go build -ldflags="-s -w" -o moviestream-linux-amd64

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: moviestream-linux-amd64
          path: moviestream-linux-amd64

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./moviestream-linux-amd64
          asset_name: moviestream-linux-amd64
          asset_content_type: application/octet-stream

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build macOS executable (Intel)
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: amd64
        run: |
          go build -ldflags="-s -w" -o moviestream-macos-amd64

      - name: Build macOS executable (ARM64)
        env:
          CGO_ENABLED: 1
          GOOS: darwin
          GOARCH: arm64
        run: |
          go build -ldflags="-s -w" -o moviestream-macos-arm64

      - name: Upload macOS Intel artifact
        uses: actions/upload-artifact@v3
        with:
          name: moviestream-macos-amd64
          path: moviestream-macos-amd64

      - name: Upload macOS ARM64 artifact
        uses: actions/upload-artifact@v3
        with:
          name: moviestream-macos-arm64
          path: moviestream-macos-arm64

      - name: Upload macOS Intel to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./moviestream-macos-amd64
          asset_name: moviestream-macos-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./moviestream-macos-arm64
          asset_name: moviestream-macos-arm64
          asset_content_type: application/octet-stream

